{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\raish\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:\\\\Users\\\\raish\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\raish\\\\Downloads\\\\react-calculator\\\\src\\\\App.js\";\nimport { useReducer } from \"react\";\nimport DigitButton from \"./DigitButton\";\nimport OperationButton from \"./OperationButton\";\nimport \"./styles.css\";\nexport var ACTIONS = {\n  ADD_DIGIT: \"add-digit\",\n  CHOOSE_OPERATION: \"choose-operation\",\n  CLEAR: \"clear\",\n  DELETE_DIGIT: \"delete-digit\",\n  EVALUATE: \"evaluate\"\n};\n\nfunction reducer(state, _ref) {\n  var type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          currentOperand: payload.digit,\n          overwrite: false\n        });\n      }\n\n      if (payload.digit === \"0\" && state.currentOperand === \"0\") {\n        return state;\n      }\n\n      if (payload.digit === \".\" && state.currentOperand.includes(\".\")) {\n        return state;\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentOperand: \"\".concat(state.currentOperand || \"\").concat(payload.digit)\n      });\n\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.currentOperand == null && state.previousOperand == null) {\n        return state;\n      }\n\n      if (state.currentOperand == null) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          operation: payload.operation\n        });\n      }\n\n      if (state.previousOperand == null) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null\n        });\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: null\n      });\n\n    case ACTIONS.CLEAR:\n      return {};\n\n    case ACTIONS.DELETE_DIGIT:\n      if (state.overwrite) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          overwrite: false,\n          currentOperand: null\n        });\n      }\n\n      if (state.currentOperand == null) return state;\n\n      if (state.currentOperand.length === 1) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          currentOperand: null\n        });\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentOperand: state.currentOperand.slice(0, -1)\n      });\n\n    case ACTIONS.EVALUATE:\n      if (state.operation == null || state.currentOperand == null || state.previousOperand == null) {\n        return state;\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        overwrite: true,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state)\n      });\n  }\n}\n\nfunction evaluate(_ref2) {\n  var currentOperand = _ref2.currentOperand,\n      previousOperand = _ref2.previousOperand,\n      operation = _ref2.operation;\n  var prev = parseFloat(previousOperand);\n  var current = parseFloat(currentOperand);\n  if (isNaN(prev) || isNaN(current)) return \"\";\n  var computation = \"\";\n\n  switch (operation) {\n    case \"+\":\n      computation = prev + current;\n      break;\n\n    case \"-\":\n      computation = prev - current;\n      break;\n\n    case \"*\":\n      computation = prev * current;\n      break;\n\n    case \"รท\":\n      computation = prev / current;\n      break;\n  }\n\n  return computation.toString();\n}\n\nvar INTEGER_FORMATTER = new Intl.NumberFormat(\"en-us\", {\n  maximumFractionDigits: 0\n});\n\nfunction formatOperand(operand) {\n  if (operand == null) return;\n\n  var _operand$split = operand.split(\".\"),\n      _operand$split2 = _slicedToArray(_operand$split, 2),\n      integer = _operand$split2[0],\n      decimal = _operand$split2[1];\n\n  if (decimal == null) return INTEGER_FORMATTER.format(integer);\n  return \"\".concat(INTEGER_FORMATTER.format(integer), \".\").concat(decimal);\n}\n\nfunction App() {\n  var _useReducer = useReducer(reducer, {}),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      _useReducer2$ = _useReducer2[0],\n      currentOperand = _useReducer2$.currentOperand,\n      previousOperand = _useReducer2$.previousOperand,\n      operation = _useReducer2$.operation,\n      dispatch = _useReducer2[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calculator-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"previous-operand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, formatOperand(previousOperand), \" \", operation), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"current-operand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, formatOperand(currentOperand))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"span-two\",\n    onClick: function onClick() {\n      return dispatch({\n        type: ACTIONS.CLEAR\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, \"AC\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return dispatch({\n        type: ACTIONS.DELETE_DIGIT\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, \"DEL\"), /*#__PURE__*/React.createElement(OperationButton, {\n    operation: \"\\xF7\",\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DigitButton, {\n    digit: \"1\",\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DigitButton, {\n    digit: \"2\",\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DigitButton, {\n    digit: \"3\",\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(OperationButton, {\n    operation: \"*\",\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DigitButton, {\n    digit: \"4\",\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DigitButton, {\n    digit: \"5\",\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DigitButton, {\n    digit: \"6\",\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(OperationButton, {\n    operation: \"+\",\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DigitButton, {\n    digit: \"7\",\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DigitButton, {\n    digit: \"8\",\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DigitButton, {\n    digit: \"9\",\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(OperationButton, {\n    operation: \"-\",\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DigitButton, {\n    digit: \".\",\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DigitButton, {\n    digit: \"0\",\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"span-two\",\n    onClick: function onClick() {\n      return dispatch({\n        type: ACTIONS.EVALUATE\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, \"=\"));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/raish/Downloads/react-calculator/src/App.js"],"names":["useReducer","DigitButton","OperationButton","ACTIONS","ADD_DIGIT","CHOOSE_OPERATION","CLEAR","DELETE_DIGIT","EVALUATE","reducer","state","type","payload","overwrite","currentOperand","digit","includes","previousOperand","operation","evaluate","length","slice","prev","parseFloat","current","isNaN","computation","toString","INTEGER_FORMATTER","Intl","NumberFormat","maximumFractionDigits","formatOperand","operand","split","integer","decimal","format","App","dispatch"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,cAAP;AAEA,OAAO,IAAMC,OAAO,GAAG;AACrBC,EAAAA,SAAS,EAAE,WADU;AAErBC,EAAAA,gBAAgB,EAAE,kBAFG;AAGrBC,EAAAA,KAAK,EAAE,OAHc;AAIrBC,EAAAA,YAAY,EAAE,cAJO;AAKrBC,EAAAA,QAAQ,EAAE;AALW,CAAhB;;AAQP,SAASC,OAAT,CAAiBC,KAAjB,QAA2C;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,OAAW,QAAXA,OAAW;;AACzC,UAAQD,IAAR;AACE,SAAKR,OAAO,CAACC,SAAb;AACE,UAAIM,KAAK,CAACG,SAAV,EAAqB;AACnB,+CACKH,KADL;AAEEI,UAAAA,cAAc,EAAEF,OAAO,CAACG,KAF1B;AAGEF,UAAAA,SAAS,EAAE;AAHb;AAKD;;AACD,UAAID,OAAO,CAACG,KAAR,KAAkB,GAAlB,IAAyBL,KAAK,CAACI,cAAN,KAAyB,GAAtD,EAA2D;AACzD,eAAOJ,KAAP;AACD;;AACD,UAAIE,OAAO,CAACG,KAAR,KAAkB,GAAlB,IAAyBL,KAAK,CAACI,cAAN,CAAqBE,QAArB,CAA8B,GAA9B,CAA7B,EAAiE;AAC/D,eAAON,KAAP;AACD;;AAED,6CACKA,KADL;AAEEI,QAAAA,cAAc,YAAKJ,KAAK,CAACI,cAAN,IAAwB,EAA7B,SAAkCF,OAAO,CAACG,KAA1C;AAFhB;;AAIF,SAAKZ,OAAO,CAACE,gBAAb;AACE,UAAIK,KAAK,CAACI,cAAN,IAAwB,IAAxB,IAAgCJ,KAAK,CAACO,eAAN,IAAyB,IAA7D,EAAmE;AACjE,eAAOP,KAAP;AACD;;AAED,UAAIA,KAAK,CAACI,cAAN,IAAwB,IAA5B,EAAkC;AAChC,+CACKJ,KADL;AAEEQ,UAAAA,SAAS,EAAEN,OAAO,CAACM;AAFrB;AAID;;AAED,UAAIR,KAAK,CAACO,eAAN,IAAyB,IAA7B,EAAmC;AACjC,+CACKP,KADL;AAEEQ,UAAAA,SAAS,EAAEN,OAAO,CAACM,SAFrB;AAGED,UAAAA,eAAe,EAAEP,KAAK,CAACI,cAHzB;AAIEA,UAAAA,cAAc,EAAE;AAJlB;AAMD;;AAED,6CACKJ,KADL;AAEEO,QAAAA,eAAe,EAAEE,QAAQ,CAACT,KAAD,CAF3B;AAGEQ,QAAAA,SAAS,EAAEN,OAAO,CAACM,SAHrB;AAIEJ,QAAAA,cAAc,EAAE;AAJlB;;AAMF,SAAKX,OAAO,CAACG,KAAb;AACE,aAAO,EAAP;;AACF,SAAKH,OAAO,CAACI,YAAb;AACE,UAAIG,KAAK,CAACG,SAAV,EAAqB;AACnB,+CACKH,KADL;AAEEG,UAAAA,SAAS,EAAE,KAFb;AAGEC,UAAAA,cAAc,EAAE;AAHlB;AAKD;;AACD,UAAIJ,KAAK,CAACI,cAAN,IAAwB,IAA5B,EAAkC,OAAOJ,KAAP;;AAClC,UAAIA,KAAK,CAACI,cAAN,CAAqBM,MAArB,KAAgC,CAApC,EAAuC;AACrC,+CAAYV,KAAZ;AAAmBI,UAAAA,cAAc,EAAE;AAAnC;AACD;;AAED,6CACKJ,KADL;AAEEI,QAAAA,cAAc,EAAEJ,KAAK,CAACI,cAAN,CAAqBO,KAArB,CAA2B,CAA3B,EAA8B,CAAC,CAA/B;AAFlB;;AAIF,SAAKlB,OAAO,CAACK,QAAb;AACE,UACEE,KAAK,CAACQ,SAAN,IAAmB,IAAnB,IACAR,KAAK,CAACI,cAAN,IAAwB,IADxB,IAEAJ,KAAK,CAACO,eAAN,IAAyB,IAH3B,EAIE;AACA,eAAOP,KAAP;AACD;;AAED,6CACKA,KADL;AAEEG,QAAAA,SAAS,EAAE,IAFb;AAGEI,QAAAA,eAAe,EAAE,IAHnB;AAIEC,QAAAA,SAAS,EAAE,IAJb;AAKEJ,QAAAA,cAAc,EAAEK,QAAQ,CAACT,KAAD;AAL1B;AA3EJ;AAmFD;;AAED,SAASS,QAAT,QAAkE;AAAA,MAA9CL,cAA8C,SAA9CA,cAA8C;AAAA,MAA9BG,eAA8B,SAA9BA,eAA8B;AAAA,MAAbC,SAAa,SAAbA,SAAa;AAChE,MAAMI,IAAI,GAAGC,UAAU,CAACN,eAAD,CAAvB;AACA,MAAMO,OAAO,GAAGD,UAAU,CAACT,cAAD,CAA1B;AACA,MAAIW,KAAK,CAACH,IAAD,CAAL,IAAeG,KAAK,CAACD,OAAD,CAAxB,EAAmC,OAAO,EAAP;AACnC,MAAIE,WAAW,GAAG,EAAlB;;AACA,UAAQR,SAAR;AACE,SAAK,GAAL;AACEQ,MAAAA,WAAW,GAAGJ,IAAI,GAAGE,OAArB;AACA;;AACF,SAAK,GAAL;AACEE,MAAAA,WAAW,GAAGJ,IAAI,GAAGE,OAArB;AACA;;AACF,SAAK,GAAL;AACEE,MAAAA,WAAW,GAAGJ,IAAI,GAAGE,OAArB;AACA;;AACF,SAAK,GAAL;AACEE,MAAAA,WAAW,GAAGJ,IAAI,GAAGE,OAArB;AACA;AAZJ;;AAeA,SAAOE,WAAW,CAACC,QAAZ,EAAP;AACD;;AAED,IAAMC,iBAAiB,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AACvDC,EAAAA,qBAAqB,EAAE;AADgC,CAA/B,CAA1B;;AAGA,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;AAC9B,MAAIA,OAAO,IAAI,IAAf,EAAqB;;AACrB,uBAA2BA,OAAO,CAACC,KAAR,CAAc,GAAd,CAA3B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,OAAhB;;AACA,MAAIA,OAAO,IAAI,IAAf,EAAqB,OAAOR,iBAAiB,CAACS,MAAlB,CAAyBF,OAAzB,CAAP;AACrB,mBAAUP,iBAAiB,CAACS,MAAlB,CAAyBF,OAAzB,CAAV,cAA+CC,OAA/C;AACD;;AAED,SAASE,GAAT,GAAe;AACb,oBAAmEtC,UAAU,CAC3ES,OAD2E,EAE3E,EAF2E,CAA7E;AAAA;AAAA;AAAA,MAASK,cAAT,iBAASA,cAAT;AAAA,MAAyBG,eAAzB,iBAAyBA,eAAzB;AAAA,MAA0CC,SAA1C,iBAA0CA,SAA1C;AAAA,MAAuDqB,QAAvD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,aAAa,CAACf,eAAD,CADhB,OACoCC,SADpC,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCc,aAAa,CAAClB,cAAD,CAA/C,CAJF,CADF,eAOE;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMyB,QAAQ,CAAC;AAAE5B,QAAAA,IAAI,EAAER,OAAO,CAACG;AAAhB,OAAD,CAAd;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,eAaE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMiC,QAAQ,CAAC;AAAE5B,QAAAA,IAAI,EAAER,OAAO,CAACI;AAAhB,OAAD,CAAd;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAbF,eAgBE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,MAA3B;AAA+B,IAAA,QAAQ,EAAEgC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,eAiBE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,GAAnB;AAAuB,IAAA,QAAQ,EAAEA,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,eAkBE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,GAAnB;AAAuB,IAAA,QAAQ,EAAEA,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,eAmBE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,GAAnB;AAAuB,IAAA,QAAQ,EAAEA,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,eAoBE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,GAA3B;AAA+B,IAAA,QAAQ,EAAEA,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,eAqBE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,GAAnB;AAAuB,IAAA,QAAQ,EAAEA,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,eAsBE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,GAAnB;AAAuB,IAAA,QAAQ,EAAEA,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,eAuBE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,GAAnB;AAAuB,IAAA,QAAQ,EAAEA,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,eAwBE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,GAA3B;AAA+B,IAAA,QAAQ,EAAEA,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,eAyBE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,GAAnB;AAAuB,IAAA,QAAQ,EAAEA,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,eA0BE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,GAAnB;AAAuB,IAAA,QAAQ,EAAEA,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,eA2BE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,GAAnB;AAAuB,IAAA,QAAQ,EAAEA,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BF,eA4BE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,GAA3B;AAA+B,IAAA,QAAQ,EAAEA,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BF,eA6BE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,GAAnB;AAAuB,IAAA,QAAQ,EAAEA,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BF,eA8BE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,GAAnB;AAAuB,IAAA,QAAQ,EAAEA,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BF,eA+BE;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMA,QAAQ,CAAC;AAAE5B,QAAAA,IAAI,EAAER,OAAO,CAACK;AAAhB,OAAD,CAAd;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SA/BF,CADF;AAwCD;;AAED,eAAe8B,GAAf","sourcesContent":["import { useReducer } from \"react\";\nimport DigitButton from \"./DigitButton\";\nimport OperationButton from \"./OperationButton\";\nimport \"./styles.css\";\n\nexport const ACTIONS = {\n  ADD_DIGIT: \"add-digit\",\n  CHOOSE_OPERATION: \"choose-operation\",\n  CLEAR: \"clear\",\n  DELETE_DIGIT: \"delete-digit\",\n  EVALUATE: \"evaluate\"\n};\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          currentOperand: payload.digit,\n          overwrite: false\n        };\n      }\n      if (payload.digit === \"0\" && state.currentOperand === \"0\") {\n        return state;\n      }\n      if (payload.digit === \".\" && state.currentOperand.includes(\".\")) {\n        return state;\n      }\n\n      return {\n        ...state,\n        currentOperand: `${state.currentOperand || \"\"}${payload.digit}`\n      };\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.currentOperand == null && state.previousOperand == null) {\n        return state;\n      }\n\n      if (state.currentOperand == null) {\n        return {\n          ...state,\n          operation: payload.operation\n        };\n      }\n\n      if (state.previousOperand == null) {\n        return {\n          ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null\n        };\n      }\n\n      return {\n        ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: null\n      };\n    case ACTIONS.CLEAR:\n      return {};\n    case ACTIONS.DELETE_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          overwrite: false,\n          currentOperand: null\n        };\n      }\n      if (state.currentOperand == null) return state;\n      if (state.currentOperand.length === 1) {\n        return { ...state, currentOperand: null };\n      }\n\n      return {\n        ...state,\n        currentOperand: state.currentOperand.slice(0, -1)\n      };\n    case ACTIONS.EVALUATE:\n      if (\n        state.operation == null ||\n        state.currentOperand == null ||\n        state.previousOperand == null\n      ) {\n        return state;\n      }\n\n      return {\n        ...state,\n        overwrite: true,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state)\n      };\n  }\n}\n\nfunction evaluate({ currentOperand, previousOperand, operation }) {\n  const prev = parseFloat(previousOperand);\n  const current = parseFloat(currentOperand);\n  if (isNaN(prev) || isNaN(current)) return \"\";\n  let computation = \"\";\n  switch (operation) {\n    case \"+\":\n      computation = prev + current;\n      break;\n    case \"-\":\n      computation = prev - current;\n      break;\n    case \"*\":\n      computation = prev * current;\n      break;\n    case \"รท\":\n      computation = prev / current;\n      break;\n  }\n\n  return computation.toString();\n}\n\nconst INTEGER_FORMATTER = new Intl.NumberFormat(\"en-us\", {\n  maximumFractionDigits: 0\n});\nfunction formatOperand(operand) {\n  if (operand == null) return;\n  const [integer, decimal] = operand.split(\".\");\n  if (decimal == null) return INTEGER_FORMATTER.format(integer);\n  return `${INTEGER_FORMATTER.format(integer)}.${decimal}`;\n}\n\nfunction App() {\n  const [{ currentOperand, previousOperand, operation }, dispatch] = useReducer(\n    reducer,\n    {}\n  );\n\n  return (\n    <div className=\"calculator-grid\">\n      <div className=\"output\">\n        <div className=\"previous-operand\">\n          {formatOperand(previousOperand)} {operation}\n        </div>\n        <div className=\"current-operand\">{formatOperand(currentOperand)}</div>\n      </div>\n      <button\n        className=\"span-two\"\n        onClick={() => dispatch({ type: ACTIONS.CLEAR })}\n      >\n        AC\n      </button>\n      <button onClick={() => dispatch({ type: ACTIONS.DELETE_DIGIT })}>\n        DEL\n      </button>\n      <OperationButton operation=\"รท\" dispatch={dispatch} />\n      <DigitButton digit=\"1\" dispatch={dispatch} />\n      <DigitButton digit=\"2\" dispatch={dispatch} />\n      <DigitButton digit=\"3\" dispatch={dispatch} />\n      <OperationButton operation=\"*\" dispatch={dispatch} />\n      <DigitButton digit=\"4\" dispatch={dispatch} />\n      <DigitButton digit=\"5\" dispatch={dispatch} />\n      <DigitButton digit=\"6\" dispatch={dispatch} />\n      <OperationButton operation=\"+\" dispatch={dispatch} />\n      <DigitButton digit=\"7\" dispatch={dispatch} />\n      <DigitButton digit=\"8\" dispatch={dispatch} />\n      <DigitButton digit=\"9\" dispatch={dispatch} />\n      <OperationButton operation=\"-\" dispatch={dispatch} />\n      <DigitButton digit=\".\" dispatch={dispatch} />\n      <DigitButton digit=\"0\" dispatch={dispatch} />\n      <button\n        className=\"span-two\"\n        onClick={() => dispatch({ type: ACTIONS.EVALUATE })}\n      >\n        =\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}